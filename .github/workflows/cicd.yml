name: CI and CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  AWS_REGION: ap-southeast-1
  ECS_CLUSTER: app_cluster
  CONTAINER_NAME: blazorservicedev
  CONTAINER_VERSION: copterbuddy/blazorservicedev:latest
  ECS_SERVICE: blazor_service_dev
  ECS_TD: .github/workflows/td.json

jobs:
  # ==============
  # Testing task
  # ==============
  testing:
    runs-on: ubuntu-20.04
    steps:
      - 
        uses: actions/checkout@v3
      - 
        name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - 
        name: Restore dependencies
        run: dotnet restore
      - 
        name: Build
        run: dotnet build --no-restore
      - 
        name: Test
        run: dotnet test --no-build --verbosity normal


  # ==============
  # CI task
  # ==============
  build-and-push-docker-image:
    needs: testing
    runs-on: ubuntu-20.04
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Setup SHA
        run: echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
      - 
        name: Build and push github_sha
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Serivce/Dockerfile
          push: true
          tags: copterbuddy/${{ env.CONTAINER_NAME }}:${{ env.GITHUB_SHA }}
      - 
        name: Build and push latest
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Serivce/Dockerfile
          push: true
          tags: copterbuddy/${{ env.CONTAINER_NAME }}:latest


  # ==============
  # CD task
  # ==============
#   deploy-to-aws:
#     needs: build-and-push-docker-image
#     runs-on: ubuntu-20.04
#     environment: dev
#     steps:
#       - 
#         name: Checkout
#         uses: actions/checkout@v2
#       - 
#         name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.AWS_REGION }}
#       - 
#         name: Fill in the new image ID in the Amazon ECS task definition
#         id: task-def-1
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: ${{ env.ECS_TD }}
#           container-name: ${{ env.CONTAINER_NAME }}
#           image: ${{ env.CONTAINER_VERSION }}
#       - 
#         name: Deploy Amazon ECS task definition
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.task-def-1.outputs.task-definition }}
#           service: ${{ env.ECS_SERVICE }}
#           cluster: ${{ env.ECS_CLUSTER }}
